@{
    ViewBag.Title = "GCCRevisedDNUpload";
    Layout = "~/Views/Shared/NewMaster.cshtml";
}
<style>
    .ui-jqgrid tr.jqgrow td {
        font-size: 10px;
    }

    #dvLoading {
        /*background: url("../../../Images/Sun.gif") no-repeat center center;*/
        background: url("../Images/Sun.gif") no-repeat center center;
        height: 100%;
        width: 100%;
        position: fixed;
        z-index: 1000;
        left: 0%;
        top: 15%;
        margin: -25px 0 0 -25px;
    }

    .ui-dialog-content ui-widget-content {
        style ="width: 700px; min-height: 66px; height: 146px;" scrolltop="0" scrollleft="0";
    }
</style>
<div id="divDocuments1">
    <table class="WithBorderOnly" width="100%">
        <tr class="PanelHeading">
            <td colspan="7" class="PanelHeading">
                <i class="icon-chevron-right"></i>&nbsp;Import Delivery Note &nbsp;
            </td>
        </tr>
        <tr>
            <td width="14%">
                <label class="lblheader">
                    Request Name
                 
                </label>
                <br />
                <input type="text" id="txtRequestName" width="70%" />
            </td>
            <td width="14%">
                <label class="lblheader">
                    Period Year</label><br />
                @Html.DropDownList("MstPeriodYear", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td width="14%">
                <label class="lblheader">
                    Period</label><br />
                @Html.DropDownList("MstPeriod", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
              <td width="14%">
                <label class="lblheader">
                    Sector</label><br />
                @Html.DropDownList("Sector", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td width="14%">
                <label class="lblheader">
                    Week</label><br />
                @Html.DropDownList("Week", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td align="left" width="14%">
                <input type="file" name="uploadedFile" id="uploadedFile" value="" /></td>

            <td align="left" colspan="2">
                <div>
                    <input type="button" value="Import" id="btnUploadDoc" />
                </div>
            </td>
        </tr>
    </table>

</div>
<fieldset>
    <table id="GCCRevisedDNUploadRequest">
    </table>
    <div id="GCCRevisedDNUploadRequestPager">
    </div>
</fieldset>
<div id="dvLoading"></div>
<script type="text/javascript">
    function GetOrdersList() {
        $('#dvLoading').hide() // hide it initially.
     .ajaxStart(function () {
         $(this).show(); // show on any Ajax event.
     })

      .ajaxStop(function () {
          $(this).hide(); // hide it when it is done.
      });

        function formatterlink(cellvalue, options, rowObject) {
            return "<a href='@Url.Content("~/Orders/DeliveryNoteDetails")?RequestId=" + rowObject[0] + "'>" + cellvalue + "</a>";
        }

        jQuery("#GCCRevisedDNUploadRequest").jqGrid({
            mtype: 'GET',
            url: '@Url.Content("~/Orders/GCCRevisedDNUploadRequestJqGrid")?Category=DNDataFormatUpload',
            datatype: 'json',
            height: '275',
            width: '1200',
            shrinkToFit: true,
            colNames: ['RequestId', 'RequestName', 'Period', 'PeriodYear','Sector', 'Week', 'RequestNo', 'Category', 'Status', 'CreatedBy', 'CreatedDate', 'UploadStatus'],
            colModel: [
                        { name: 'RequestId', index: 'RequestId', key: true, hidden: true, editable: true },
                        { name: 'RequestName', index: 'RequestName', width: 200, formatter: formatterlink },
                        { name: 'Period', index: 'Period', width: 60 },
                        { name: 'PeriodYear', index: 'PeriodYear', width: 60 },
                        { name: 'Sector', index: 'Sector', width: 60 },

                        { name: 'Week', index: 'Week', width: 60 },
                        { name: 'RequestNo', index: 'RequestNo', width: 80, hidden: true },
                        { name: 'Category', index: 'Category', width: 150 },
                        { name: 'Status', index: 'Status', width: 80, hidden: true },
                        { name: 'CreatedBy', index: 'CreatedBy', width: 100, },
                        { name: 'CreatedDate', index: 'CreatedDate', search: false, width: 100 },
                        { name: 'UploadStatus', index: 'UploadStatus', width: 150 },
            ],
            pager: '#GCCRevisedDNUploadRequestPager',
            rowNum: '20000',
            rowList: [500, 1000, 1500, 2000],
            // rowList: [], // disable page size dropdown
            // pgbuttons: false, // disable page control like next, back button
            //pgtext: null, // disable pager text like 'Page 0 of 10'
            sortname: 'RequestId',
            sortorder: "Desc",
            viewrecords: true,
            caption: '&nbsp;<i class="icon-th-list"></i>&nbsp;DeliveryNote Upload Request',
            multiselect: true,
            loadComplete: function () {
              
                var ids = jQuery("#GCCRevisedDNUploadRequest").jqGrid('getDataIDs');
                //  $("tr.jqgrow:odd").addClass('RowBackGroundColor');
                for (var i = 0; i < ids.length; i++) {
                    
                    rowData = jQuery("#GCCRevisedDNUploadRequest").jqGrid('getRowData', ids[i]);
                   
                    if (rowData.UploadStatus == "Uploaded Successfully") {

                        $("#GCCRevisedDNUploadRequest").setCell(ids[i], "UploadStatus", "", { "color": "#1A7F03", 'font-weight': 'bold' });

                    }
                    if (rowData.UploadStatus == "InProgress") {

                        $("#GCCRevisedDNUploadRequest").setCell(ids[i], "UploadStatus", "", { "color": "#3104B4", 'font-weight': 'bold' });
                    }

                    if (rowData.UploadStatus == "Upload Failed") {

                        $("#GCCRevisedDNUploadRequest").setCell(ids[i], "UploadStatus", "", { "color": "#FF0000", 'font-weight': 'bold' });
                    }


                }
            }

        });

        $("#GCCRevisedDNUploadRequest").jqGrid('navGrid', '#GCCRevisedDNUploadRequestPager', { del: false, add: false, edit: false, search: false, refresh: false });
        $("#GCCRevisedDNUploadRequest").jqGrid('navButtonAdd', '#GCCRevisedDNUploadRequestPager', {
            buttonicon: "ui-icon-trash",
            caption: "",
            onClickButton: function () {

                DeleteDeliveryNote();
            }
        });
    }
    $(function () {
       
        GetOrdersList();
        /*File Upload Related Start*/
        /* upload button code //Ajax File Uploading */
        function SpecialCharacters(strValidate) {
            if (strValidate.indexOf('&') != -1 || strValidate.indexOf("'") != -1 ||
                strValidate.indexOf(";") != -1 || strValidate.indexOf("#") != -1) {
                return true;
            } else {
                return false;
            }
        }
        function validateDocReq(msg, reqField, isValid) {
            var fieldVal = $('#' + reqField).val();
            if ((typeof isValid != 'undefined' && isValid) || fieldVal == null || fieldVal == "") {
                ErrMsg(msg, function () { $('#' + reqField).focus(); });
                return false;
            } else {
                return true;
            }
        }
        $('#btnUploadDoc').click(function () {
            if ($('#MstPeriod').val() != "" && $('#MstPeriodYear').val() != "" && $('#txtRequestName').val() != "") {
                var splitstr = $('#uploadedFile').val().split('\\');
                var fileName = splitstr[splitstr.length - 1];
                var DocTypeText = $('#doctype option:selected').text();
                if (!validateDocReq("No document found. Please select a file to upload!!!", 'uploadedFile')) { }
                else if (!validateDocReq("Special characters (&,#,;') are not supported in document file names. Please amend the file name before upload!!!", 'uploadedFile', SpecialCharacters(fileName))) { }
                else if (!validateDocReq("The attached file does not contain file extension.", 'uploadedFile', (fileName.lastIndexOf('.') == -1))) { }
                else {
                    ajaxUploadDocs();
                    return false;
                }
            }
            else {
                ErrMsg('RequestName,Period and Period year can not be empty');
            }
        });
        function ajaxUploadDocs() {

            $.ajaxFileUpload({
                url: 'GCCRevisedDNUpload',
                secureuri: false,
                fileElementId: 'uploadedFile',
                dataType: 'json',
                data: { 'Period': $('#MstPeriod').val(), 'PeriodYear': $('#MstPeriodYear').val(), 'RequestName': $('#txtRequestName').val(), 'Week': $('#Week').val(),'Sector':$('#Sector').val() },
                success: function (data, status) {
                    $('#dvLoading').hide();
                    $('#GCCRevisedDNUploadRequest').trigger("reloadGrid");
                    $('#uploadedFile').val('');
                    if (data.result != '') {
                        if ( data.success == true) {
                            InfoMsg('DN Data format Uploading Initiated');
                            $('#GCCRevisedDNUploadRequest').trigger("reloadGrid");
                            $('#uploadedFile').val('');
                            $('#MstPeriod').val('');
                            $('#MstPeriodYear').val('');
                            $('#txtRequestName').val('');
                            $('#Week').val('');
                            $('#Sector').val('');

                        } else {
                            ErrMsg(data.result);
                        }
                    }
                },
                error: function (data, status, e) {

                }
            });
      
        }
        /*File Upload Related End*/
    });
    $(function () {

        FillMstPeriodYear();
        FillMstPeriod();
        FillWeek();
        FillSector();
        $("#MstPeriodYear").change(function () {
            FillMstPeriod();
        });
        $("#MstPeriod").change(function () {
            FillWeek($("#MstPeriod").val(), $("#MstPeriodYear").val());
        });
    });
    function Search() {

        var Sector = $('#Sector').val();
        var Contingent = $('#Contingent').val();
        var Location = $('#Location').val();
        var Period = $('#Period').val();
        var Period = $()
        var searchItems = $('#Sector').val() + ',' + $('#Contingent').val() + ',' + $('#Location').val() + ',' + $('#Period').val() + ',' + $('#PeriodYear').val();


        $("#DNMaster").setGridParam(
            {
                datatype: "json",
                url: '@Url.Content("~/Orders/GCCDeliveryNoteJqGrid")?searchItems=' + searchItems,
                page: 0
            }).trigger("reloadGrid");
    }
    function FillMstPeriodYear() {
       
        $.getJSON('@Url.Content("~/Masters/FillPeriodYear")',
    function (modelData) {
        var select = $("#MstPeriodYear");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Year"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    function FillMstPeriod() {
        $.getJSON('@Url.Content("~/Masters/FillPeriod/")',
    function (modelData) {
        var select = $("#MstPeriod");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Period"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    function FillWeek(Period, PeriodYear) {
      
        $.getJSON('@Url.Content("~/Masters/FillWeek/")?Period=' + Period + "&PeriodYear=" + PeriodYear,
    function (modelData) {
        var select = $("#Week");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Week"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    function DeleteDeliveryNote() {
       
        var id = $('#GCCRevisedDNUploadRequest').jqGrid('getGridParam', 'selarrrow');

        if (confirm("Are you sure you want to delete this item?")) {

            $('#dvLoading').show();
            $.ajax({
                url: '@Url.Content("~/Orders/DeleteGCCRevisedDeliveryNote")?RequestIds=' + id,
                type: 'POST',
                dataType: 'json',
                traditional: true,
                success: function (data,status) {
                    $('#dvLoading').hide();
                    $("#GCCRevisedDNUploadRequest").trigger("reloadGrid");
                    InfoMsg('Deleted Successfully!')

                },
                loadError: function (xhr, status, error) {
                    msgError = $.parseJSON(xhr.responseText).Message;
                    ErrMsg(msgError, function () { });
                }
            });
        }




    }
    function FillSector() {
        $.getJSON('@Url.Content("~/Masters/FillSectorbyUser/")',
    function (modelData) {
        var select = $("#Sector");
        select.empty();
        select.append($('<option/>',
    {
        value: "",
        text: "Select Sector"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
</script>
