@{
    ViewBag.Title = "UploadExpectedDeliveryDate";
    Layout = "~/Views/Shared/NewMaster.cshtml";
}

<style>
    .ui-jqgrid tr.jqgrow td{font-size:10px;}

    
    
    #dvLoading
    {
        /*background: url("../../../Images/Sun.gif") no-repeat center center;*/
        background: url("../Images/Sun.gif") no-repeat center center;
        height: 100%;
        width: 100%;
        position: fixed;
        z-index: 1000;
        left: 0%;
        top: 15%;
        margin: -25px 0 0 -25px;
    }
   .ui-dialog-content ui-widget-content{ style="width: 700px; min-height: 66px; height: 146px;" scrolltop="0" scrollleft="0"}
</style>
<script type="text/javascript">

    function GetOrdersList() {

        $('#dvLoading').hide() // hide it initially.
      .ajaxStart(function () {
          $(this).show(); // show on any Ajax event.
      })

       .ajaxStop(function () {
           $(this).hide(); // hide it when it is done.
       });
        function formatterlink(cellvalue, options, rowObject) {
            return "<a href='@Url.Content("~/Orders/ExpDelDateRequestDetails")?RequestId=" + rowObject[0] + "'>" + cellvalue + "</a>";
        }

        $('#OrdersList').jqGrid('GridUnload');
        jQuery("#ExpDeliveryDateRequestList").jqGrid({
            mtype: 'GET',
            url: '@Url.Content("~/Orders/SubstitutionMasterUploadRequestJqGrid")?Category=ExpDeliveryDateUpload',
            datatype: 'json',
            height: '275',
            width: '1200',
            // width: $("#OrdersList").closest("fieldset").innerWidth() - 10,
            shrinkToFit: true,
            colNames: ['RequestId', 'RequestName', 'Period', 'PeriodYear', 'RequestNo', 'Category', 'Status', 'CreatedBy', 'CreatedDate', 'UploadStatus'],
            colModel: [
                        { name: 'RequestId', index: 'RequestId', key: true, hidden: true, editable: true },
                        { name: 'RequestName', index: 'RequestName', width: 200, formatter: formatterlink },
                        { name: 'Period', index: 'Period', width: 60 },
                        { name: 'PeriodYear', index: 'PeriodYear', width: 60 },
                        { name: 'RequestNo', index: 'RequestNo', width: 80, hidden: true },
                        { name: 'Category', index: 'Category', width: 150 },
                        { name: 'Status', index: 'Status', width: 80, hidden: true },
                        { name: 'CreatedBy', index: 'CreatedBy', width: 100, },
                        { name: 'CreatedDate', index: 'CreatedDate', search: false, width: 100 },
                        { name: 'UploadStatus', index: 'UploadStatus', width: 150 },
            ],
            pager: '#ExpDeliveryDateRequestListPager',
            rowNum: '20000',
            rowList: [500, 1000, 1500, 2000],
            // rowList: [], // disable page size dropdown
            // pgbuttons: false, // disable page control like next, back button
            //pgtext: null, // disable pager text like 'Page 0 of 10'
            sortname: 'RequestId',
            sortorder: "Desc",
            viewrecords: true,
            caption: '&nbsp;<i class="icon-th-list"></i>&nbsp;Expected Delivery Date Request List',
            multiselect: true,
            loadComplete: function () {
                debugger;
                var ids = jQuery("#ExpDeliveryDateRequestList").jqGrid('getDataIDs');
                //  $("tr.jqgrow:odd").addClass('RowBackGroundColor');
                for (var i = 0; i < ids.length; i++) {
                    debugger;
                    rowData = jQuery("#ExpDeliveryDateRequestList").jqGrid('getRowData', ids[i]);
                    debugger;
                    if (rowData.UploadStatus == "Uploaded Successfully") {

                        $("#ExpDeliveryDateRequestList").setCell(ids[i], "UploadStatus", "", { "color": "#1A7F03", 'font-weight': 'bold' });

                    }
                    if (rowData.UploadStatus == "InProgress") {

                        $("#ExpDeliveryDateRequestList").setCell(ids[i], "UploadStatus", "", { "color": "#3104B4", 'font-weight': 'bold' });
                    }

                    if (rowData.UploadStatus == "Upload Failed") {

                        $("#ExpDeliveryDateRequestList").setCell(ids[i], "UploadStatus", "", { "color": "#FF0000", 'font-weight': 'bold' });
                    }


                }
            }

        });
        $("#ExpDeliveryDateRequestList").jqGrid('navGrid', '#ExpDeliveryDateRequestListPager', { del: false, add: false, edit: false, search: false, refresh: false });
        $("#ExpDeliveryDateRequestList").jqGrid('navButtonAdd', '#ExpDeliveryDateRequestListPager', {
            buttonicon: "ui-icon-trash",
            caption: "",
            onClickButton: function () {
                selRowId = $('#ExpDeliveryDateRequestList').jqGrid('getGridParam', 'selarrrow'),
                DeleteExpectedDeliveryDate(selRowId);
            }
        });
        $('#OrdersList').jqGrid('filterToolbar', { searchOnEnter: true, enableClear: false, afterSearch: function () { $('#OrdersList').clearGridData(); } });


    }

    $(function () {
        GetOrdersList();
        /*File Upload Related Start*/
        /* upload button code //Ajax File Uploading */
        function SpecialCharacters(strValidate) {
            if (strValidate.indexOf('&') != -1 || strValidate.indexOf("'") != -1 ||
                strValidate.indexOf(";") != -1 || strValidate.indexOf("#") != -1) {
                return true;
            } else {
                return false;
            }
        }

        function validateDocReq(msg, reqField, isValid) {
            var fieldVal = $('#' + reqField).val();
            if ((typeof isValid != 'undefined' && isValid) || fieldVal == null || fieldVal == "") {
                ErrMsg(msg, function () { $('#' + reqField).focus(); });
                return false;
            } else {
                return true;
            }
        }

        $('#btnUploadDoc').click(function () {
            if ($('#MstPeriod').val() != "" && $('#MstPeriodYear').val() != "" && $('#txtRequestName').val() != "") {
                var splitstr = $('#uploadedFile').val().split('\\');
                var fileName = splitstr[splitstr.length - 1];
                var DocTypeText = $('#doctype option:selected').text();
                if (!validateDocReq("No document found. Please select a file to upload!!!", 'uploadedFile')) { }
                else if (!validateDocReq("Special characters (&,#,;') are not supported in document file names. Please amend the file name before upload!!!", 'uploadedFile', SpecialCharacters(fileName))) { }
                else if (!validateDocReq("The attached file does not contain file extension.", 'uploadedFile', (fileName.lastIndexOf('.') == -1))) { }
                else {
                    ajaxUploadDocs();
                    return false;
                }
            }
            else {
                ErrMsg('Request Name can not be empty');
            }
        });

        function ajaxUploadDocs() {
            // debugger;

          
            $.ajaxFileUpload({
                url: 'UploadExpectedDeliveryDate',
                secureuri: false,
                fileElementId: 'uploadedFile',
                data: { 'Period': $('#MstPeriod').val(), 'PeriodYear': $('#MstPeriodYear').val(), 'RequestName': $('#txtRequestName').val() },
                dataType: 'json',
                success: function (data, status) {
                    //debugger;
                    $('#ExpDeliveryDateRequestList').trigger("reloadGrid");
                    $('#uploadedFile').val('');
                    if (typeof data.result != 'undefined' && data.result != '') {
                        if (typeof data.success != 'undefined' && data.success == true) {
                            //$("#textDialogBox").html("test<br/>test2");
                            InfoMsg(data.result);
                        } else {
                            ErrMsg(data.result);
                        }
                    }
                },
                error: function (data, status, e) {

                }
            });
        }
        /*File Upload Related End*/
    });
    $(function () {

        FillSector();
        FillContingent();
        FillPeriod();
        FillLocation();
        FillPeriodYear();
        FillMstPeriod();
        FillMstPeriodYear();
        $("#Sector").change(function () {
            FillContingent($(this).val());
        });
        $("#Contingent").change(function () {
            FillLocation($("#Sector").val(), $(this).val());
        });
        $("#btnPDF").click(function () {
            window.open('@Url.Content("~/PdfGeneration/InvoicePrint")?OrderId=' + 61, '_blank');
        });

        //        $("#btnInvoice").click(function () {
        //                window.location.href = '@Url.Action("NewInvoice", "Invoice")';
        //        });
    });

    function FillSector() {
        $.getJSON('@Url.Content("~/Masters/FillSectorbyUser/")',
    function (modelData) {
        var select = $("#Sector");
        select.empty();
        select.append($('<option/>',
    {
        value: "",
        text: "Select Sector"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    function FillContingent(SectorCode) {
        $.getJSON('@Url.Content("~/Masters/FillContingentbyUser/")?SectorCode=' + SectorCode,
    function (modelData) {
        var select = $("#Contingent");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Contingent"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }

    function FillLocation(SectorCode, ContingentCode) {
        $.getJSON('@Url.Content("~/Masters/FillLocationbyUser/")?SectorCode=' + SectorCode + '&ContingentCode=' + ContingentCode,
    function (modelData) {
        var select = $("#Location");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Location"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }

    function FillPeriod() {
        $.getJSON('@Url.Content("~/Masters/FillPeriod/")',
    function (modelData) {
        var select = $("#Period");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Period"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    function Search() {

        var Sector = $('#Sector').val();
        var Contingent = $('#Contingent').val();
        var ClientName = $('#Location').val();
        var Location = $('#Period').val();
        var searchItems = $('#Sector').val() + ',' + $('#Contingent').val() + ',' + $('#Location').val() + ',' + $('#Period').val()+','+$('#PeriodYear').val();


        $("#ExpDeliveryDateRequestList").setGridParam(
            {
                datatype: "json",
                url: '@Url.Content("~/Orders/ImportedExpectedDeliveryNoteListJqgrid")?searchItems=' + searchItems,
                //postData: { ProjectCode: ProjectCode, ProjectType: ProjectType, ClientName: ClientName, City: City, ContactPerson: ContactPerson },
                page: 0
            }).trigger("reloadGrid");
    }


    function ResetSearch() {
        var searchItems = "";
        $("#ExpDeliveryDateRequestList").setGridParam(
            {
                datatype: "json",
                url: '@Url.Content("~/Orders/")?searchItems=' + searchItems,
                //postData: { ProjectCode: ProjectCode, ImportedExpectedDeliveryNoteListJqgridProjectType: ProjectType, ClientName: ClientName, City: City, ContactPerson: ContactPerson },
                page: 0
            }).trigger("reloadGrid");s
    }
    //Deleting the importeddeliverynote

    function FillPeriodYear() {
        $.getJSON('@Url.Content("~/Masters/FillPeriodYear")',
    function (modelData) {
        var select = $("#PeriodYear");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Year"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    function FillMstPeriod() {
        $.getJSON('@Url.Content("~/Masters/FillPeriod/")',
    function (modelData) {
        var select = $("#MstPeriod");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Period"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    function FillMstPeriodYear() {
        debugger;
        $.getJSON('@Url.Content("~/Masters/FillPeriodYear")',
    function (modelData) {
        var select = $("#MstPeriodYear");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Year"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    //deleting the expected delivery date
    function DeleteExpectedDeliveryDate(selRowId) {
        $.ajax({
            url: '@Url.Content("~/Orders/DeleteExpectedDeliverydate")?RequestIds=' + selRowId,
            success: function (data) {
                $('#ExpDeliveryDateRequestList').trigger("reloadGrid");
                InfoMsg('Expected Delivery Date deleted successfully');

            }

        });
    }

</script>
<div id="divDocuments">
    <table class="WithBorderOnly" width="100%">
        <tr class="PanelHeading">
            <td colspan="6" class="PanelHeading">
                <i class="icon-chevron-right"></i>&nbsp;Import Substitution Master &nbsp;
            </td>
        </tr>
        <tr>
           <td width="17%">
                <label class="lblheader">
                    Request Name
                 
                </label><br />
                <input type="text" id="txtRequestName" width="70%" />
            </td>
             <td width="17%">
                <label class="lblheader">
                    Period Year</label><br />
                @Html.DropDownList("MstPeriodYear", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td width="18%">
                <label class="lblheader">
                    Period</label><br />
                @Html.DropDownList("MstPeriod", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
           

            @*   <td align="left" width="17%">
                            <input type="submit" name="Save" id="btnSave" value="Save Request" /></td>*@
            <td align="left" width="17%">
                <input type="file" name="uploadedFile" id="uploadedFile" value="" /></td>

            <td align="left" colspan="2">
                <div>
                    <input type="button" value="Import Master" id="btnUploadDoc" />
                </div>

                @*PO Status:
                            <select id="drpPOStatus" onchange="GetPOList();" class="CSSDropDownList">
                                <option value='OPEN'>Open</option>
                                <option value='CLOSED'>Closed</option>
                            </select>*@
            </td>
        </tr>
    </table>
</div>
@*<div id="divDocuments">
      <table class="WithBorderOnly" width="100%">
        <tr class="PanelHeading">
            <td colspan="6" class="PanelHeading">
                <i class="icon-chevron-right"></i>&nbsp;Expected Delivery Date Search &nbsp;
            </td>
        </tr>
        <tr>
            <td>
                <label class="lblheader">
                    Sector</label><br />
                @Html.DropDownList("Sector", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <label class="lblheader">
                    Contingent</label><br />
                @Html.DropDownList("Contingent", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <label class="lblheader">
                    Location</label><br />
                @Html.DropDownList("Location", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <label class="lblheader">
                    Period</label><br />
                @Html.DropDownList("Period", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <label class="lblheader">
                    Period Year</label><br />
                @Html.DropDownList("PeriodYear", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <input type="button" id="btnSearch" value="Search" onclick="Search(); return false;" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input
                    type="reset" id="btnReset" onclick="ResetOrderSearch(); return false;" />
            </td>
        </tr>
    </table>
</div>*@
<fieldset>
    <table id="ExpDeliveryDateRequestList">
    </table>
    <div id="ExpDeliveryDateRequestListPager">
    </div>
</fieldset>
<div id="dvLoading">
</div>
