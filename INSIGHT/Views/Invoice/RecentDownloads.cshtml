@{
    ViewBag.Title = "RecentDownloads";
    Layout = "~/Views/Shared/NewMaster.cshtml";
}

<script type="text/javascript">
    function GetRecentDownloadsList() {
        debugger;
        $('#RecentDownloadsList').jqGrid('GridUnload');
        jQuery("#RecentDownloadsList").jqGrid({
            mtype: 'GET',
            url: '@Url.Content("~/Invoice/RecentDownloadsListJQGrid")',
            datatype: 'json',
            height: '335',
            width: '1200',
            shrinkToFit: true,
            colNames: ['Id', 'ControlId', 'Sector', 'ContingentType', 'Name', 'Period', 'PeriodYear', 'Downloaded Time', 'Doc Type', 'Download'],
            colModel: [
                { name: 'Id', index: 'Id', key: true, hidden: true },
                { name: 'ControlId', index: 'ControlId', width: 300, hidden: true },
                { name: 'Sector', index: 'Sector' },
                { name: 'ContingentType', index: 'ContingentType' },
                { name: 'Name', index: 'Name' },
                { name: 'Period', index: 'Period' },
                { name: 'PeriodYear', index: 'PeriodYear' },
                { name: 'CreatedDate', index: 'CreatedDate', width: 300 },
                { name: 'DocumentType', index: 'DocumentType' },
                { width: 300 }
            ],

            pager: '#RecentDownloadsListPager',
            rowNum: '100',
            rowList: [100, 200, 300, 400],
            sortname: 'Id',
            sortorder: "desc",
            viewrecords: true,
            caption: '&nbsp;<i class="icon-th-list"></i>&nbsp;Recent Download Management',
            multiselect: true,
            viewrecords: true
        });
        $('#RecentDownloadsList').jqGrid('filterToolbar', { searchOnEnter: true, enableClear: false, afterSearch: function () { $('#RecentDownloadsList').clearGridData(); } });
        jQuery("#RecentDownloadsList")
              .navGrid('#RecentDownloadsListPager', { edit: false, add: false, del: false, search: false, refresh: false })
        //.navButtonAdd('#RecentDownloadsListPager', {
        //    caption: "PDF ZIP Download",
        //    onClickButton: function () {
        //        var searchItems = $('#Sector').val() + ',' + $('#Contingent').val() + ',' + $('#contingentType').val() + ',' + $('#Period').val() + ',' + $('#PeriodYear').val();
        //        var Period = $('#Period').val();
        //        if ($('#Sector').val() == "") {
        //            ErrMsg("Please Select Sector");
        //            return false
        //        } if ($('#contingentType').val() == "") {
        //            ErrMsg("Please Select ContingentType");
        //            return false
        //        }
        //        if (Period == "") {
        //            ErrMsg("Please Select Period");
        //            return false
        //        }
        //        if ($('#PeriodYear').val() == "") {
        //            ErrMsg("Please Select Period Year");
        //            return false
        //        }
        //        else {

        //            window.open('/Invoice/DownloadZipFiles?searchItems=' + searchItems + '&PDF=' + true + '&EXCEL=' + false, '_blank');
        //        }
        //    }
        //})

    }

    $(function () {
        GetRecentDownloadsList();
        FillSector();
        FillContingent();
        FillPeriod();
        FillLocation();
        FillPeriodYear();
        //        $("#btnPDF").disable = "true";

        $("#Sector").change(function () {
            FillContingent($(this).val());
        });

        $("#Contingent").change(function () {
            FillLocation($("#Sector").val(), $(this).val());

            var Contigent = $("#Contingent").val();
            if (Contigent != "") {
                var result = Contigent.indexOf("FPU") > -1;
                if (result == true) {
                    $("#contingentType").val("FPU");
                }
                else
                    $("#contingentType").val("MIL")
            }
        });
        $("#Period").change(function () {
            var Period = $("#Period").val();
            if (Period != "") {
                $('#btnPDF').attr('disabled', false);
                $('#btnExcel').attr('disabled', false);
            }
            else {
                $('#btnPDF').attr('disabled', true);
                $('#btnExcel').attr('disabled', true);
            }
        });
        $("#btnClear").click(function () {

            if (confirm("Are you sure you want to Clear the History?")) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Invoice/ClearHistory")?Clear=' + true,
                    success: function (data) {
                        if (data == true) {
                            SucessMsg("Histroy Cleared Successfully");
                            var searchItems = $('#Sector').val() + ',' + $('#Contingent').val() + ',' + $('#contingentType').val() + ',' + $('#Period').val() + ',' + $('#PeriodYear').val();
                            $("#RecentDownloadsList").setGridParam(
                            {
                                datatype: "json",
                                url: '/Invoice/RecentDownloadsListJQGrid?searchItems=' + searchItems,
                                page: 0
                            }).trigger("reloadGrid");
                        }
                    },
                    dataType: "json"
                });
            }
        });

    });

    function FillSector() {
        $.getJSON('@Url.Content("/Masters/FillSectorbyUser/")',
    function (modelData) {
        var select = $("#Sector");
        select.empty();
        select.append($('<option/>',
    {
        value: "",
        text: "Select Sector"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }
    function FillContingent(SectorCode) {
        $.getJSON('@Url.Content("`/Masters/FillContingentbyUser/")?SectorCode=' + SectorCode,
    function (modelData) {
        var select = $("#Contingent");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Contingent"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }

    function FillLocation(SectorCode, ContingentCode) {
        $.getJSON('@Url.Content("~/Masters/FillLocationbyUser/")?SectorCode=' + SectorCode + '&ContingentCode=' + ContingentCode,
    function (modelData) {
        var select = $("#Location");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Location"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }

    function FillPeriod() {
        $.getJSON('@Url.Content("~/Masters/FillPeriod/")',
    function (modelData) {
        var select = $("#Period");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Period"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });
    }

    function InvoiceSearch() {

        var Sector = $('#Sector').val();
        var Contingent = $('#Contingent').val();
        var ClientName = $('#Location').val();
        var Location = $('#Period').val();
        var searchItems = $('#Sector').val() + ',' + $('#Contingent').val() + ',' + $('#contingentType').val() + ',' + $('#Period').val() + ',' + $('#PeriodYear').val();

        $("#RecentDownloadsList").setGridParam(
            {
                datatype: "json",
                url: '@Url.Content("~/Invoice/RecentDownloadsListJQGrid")?searchItems=' + searchItems,
                page: 0
            }).trigger("reloadGrid");
    }
    function ResetInvoiceSearch() {
        var searchItems = "";
        $('#Sector').val(0);
        $('#Contingent').val(0);
        $('#contingentType').val("");
        $('#Period').val(0);
        $('#PeriodYear').val(0);
        $("#RecentDownloadsList").clearGridData();
    }

    function FillPeriodYear() {
        $.getJSON('@Url.Content("~/Masters/FillPeriodYear")',
    function (modelData) {
        var select = $("#PeriodYear");
        select.empty();
        select.append($('<option/>'
    , {
        value: "",
        text: "Select Year"
    }));
        $.each(modelData, function (index, itemData) {

            select.append($('<option/>',
    {
        value: itemData.Value,
        text: itemData.Text
    }));
        });
    });

    }
</script>
<div id="divDocuments">
    <table class="WithBorderOnly" width="100%">
        <tr class="PanelHeading">
            <td colspan="6" class="PanelHeading">
                <i class="icon-chevron-right"></i>&nbsp;Recent Download Search&nbsp;
            </td>
        </tr>
        <tr>
            <td>
                <label class="lblheader">
                    Sector</label><br />
                @Html.DropDownList("Sector", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <label class="lblheader">
                    Contingent Type</label><br />
                @Html.DropDownList("contingentType", new SelectList(new[]
                                          {
                                              new{Value="",Text="Select One"},
                                              new{Value="FPU",Text="FPU"},
                                              new{Value="MIL",Text="MIL"}
                                          },
          "Value", "Text", ""), new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <label class="lblheader">
                    Contingent</label><br />
                @Html.DropDownList("Contingent", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <label class="lblheader">
                    Period Year</label><br />
                @Html.DropDownList("PeriodYear", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <label class="lblheader">
                    Period</label><br />
                @Html.DropDownList("Period", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @Class = "CSSDropDownList" })
            </td>
            <td>
                <input type="button" id="btnSearch" value="Search" onclick="InvoiceSearch(); return false;" /><input
                    type="reset" id="btnReset" value="Reset" onclick="ResetInvoiceSearch(); return false;" />
                <input type="button" id="btnClear" value="Clear Histroy" />
            </td>
        </tr>
    </table>
</div>
<table id="RecentDownloadsList">
</table>
<div id="RecentDownloadsListPager">
</div>
