@model INSIGHT.Entities.User
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/NewMaster.cshtml"; 
}
<h3>
    Create a New User Account</h3>
    <br />
<h3 >
    Use the form below to create a new account.

<br />
<br />
    Passwords are required to be a minimum of 6 characters in length.
</h3>
<br />
<link href="@Url.Content("~/App_Themes/Default/ui.jqgrid.css")" rel="stylesheet" type="text/css" />
<script type="text/javascript" src='@Url.Content("~/Scripts/JQueryUI/jquery-ui-1.8.22.custom.min.js")'></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jqGridJs/i18n/grid.locale-en.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jqGridJs/jquery.jqGrid.min.js")"></script>
<script src="@Url.Content("~/Scripts/ApplicationScript.js")" type="text/javascript"></script>
<script type="text/javascript" language="javascript">
    var error = "@ViewBag.Error";
    if (error != "") {
        ErrMsg(error);
    }
    $(function () {
        $.getJSON('@Url.Content("~/Base/FillAllSectorCode")',
             function (fillig) {
                 var ddlcam = $("#ddlSector");
                 ddlcam.empty();
                 ddlcam.append($('<option/>',
                {
                    value: "",
                    text: "Select One"

                }));

                 $.each(fillig, function (index, itemdata) {
                     ddlcam.append($('<option/>',
                         {
                             value: itemdata.Value,
                             text: itemdata.Text
                         }));
                 });
             });

        $("#UserSearch").click(function () {
            LoadPopupDynamicaly('@Url.Content("~/Account/UserList")', $('#DivUserSearch'),
            function () {
                LoadSetGridParam($('#UserList'), '@Url.Content("~/Account/UserListJqGrid")')
            });
        });

        var clbPupGrdSel = null;
        function LoadPopupDynamicaly(dynURL, ModalId, loadCalBack, onSelcalbck, width) {

            if (width == undefined) { width = 850; }
            if (ModalId.html().length == 0) {
                $.ajax({
                    url: dynURL,
                    type: 'GET',
                    async: false,
                    dataType: 'html', // <-- to expect an html response
                    success: function (data) {
                        ModalId.dialog({
                            height: 500,
                            width: width,
                            modal: true,
                            title: 'User Details',
                            buttons: {}
                        });
                        ModalId.html(data);
                    }
                });
            }
            clbPupGrdSel = onSelcalbck;
            ModalId.dialog('open');
            CallBackFunction(loadCalBack);
        }

        function LoadSetGridParam(GridId, brUrl) {
            GridId.setGridParam({
                url: brUrl,
                datatype: 'json',
                mtype: 'GET'
            }).trigger("reloadGrid");
        }




        $.getJSON('@Url.Content("~/Account/FillUserType")',
                 function (fillusertype) {
                     var ddlusrtyp = $("#ddlUserType");
                     ddlusrtyp.empty();
                     ddlusrtyp.append($('<option/>',
                    {
                        value: "",
                        text: "Select One"

                    }));

                     $.each(fillusertype, function (index, itemdata) {
                         ddlusrtyp.append($('<option/>',
                             {
                                 value: itemdata.Value,
                                 text: itemdata.Text
                             }));

                     });
                 });

        $('#btnSubmit').click(function () {

            var userid = $("#UserId").val();
            var usertyp = $("#ddlUserType").val();
            var userName = "";
            var sEmail = $('#EmailId').val();
            var pass = $("#Password").val();
            var confirmpass = $("#ConfirmPassword").val();
            var campus = $("#ddlSector").val();
            if ($.trim(userid).length == 0) {
                ErrMsg('UserId is Mandatory.');
                return false;
            }
//            if (campus == "") {
//                ErrMsg('Campus is Mandatory.');
//                return false;
//            }
            if ($.trim(usertyp).length == 0) {
                ErrMsg('User Type is Mandatory.');
                return false;
            }
           
            //            if ($.trim(sEmail).length == 0) {
            //                ErrMsg('EmailId is Mandatory.');
            //                return false;
            //            }
            //            validate(sEmail);
            //            if ((validate(sEmail)) == false) {
            //                ErrMsg('Invalid Email Address.');
            //                return false;
            //            }

            if ($.trim(pass).length < 6) {
                ErrMsg('Password should be minimum of 6 characters.');
                return false;
            }
            if (pass != confirmpass) {
                ErrMsg("Password and Confirm Password doesn't match.");
                return false;
            }
        });

        $("#btnReset").click(function () {
            window.location.href = '@Url.Action("CustomRegister", "Account")';
        });
        if ($("#SuccessUserCreation").val() == 1) {
            InfoMsg("User Created Successfully.\n Try to login with registered UserId", function () { $("#SuccessUserCreation").val(""); window.location.href = '@Url.Action("CustomRegister", "Account")'; });
        }
    });
</script>
@using (Html.BeginForm("CustomRegister"))
{
    <div>
        <table width="100%" class="InnerTable">
            <tr>
                <th width="10%">
                    <label>
                        User Id</label>
                </th>
                <td>
                    @Html.TextBoxFor(m => m.UserId, new { @placeholder = "Enter UserId" })
                    <span style="color: Red">*</span> @*<a id="UserSearch">..</a>*@
                    @Html.ValidationMessageFor(m => m.UserId)
                      @Html.Hidden("SuccessUserCreation", "", new { id = "SuccessUserCreation", @Value = TempData["SuccessUserCreation"] })
                </td>
            </tr>
            <tr>
                <th width="10%">
                    <label>
                        User Name</label>
                </th>
                <td>
                    @Html.TextBoxFor(m => m.UserName, new { @Class = "CSSTextBox", @placeholder = "Enter User Name"  })
                    <span style="color: Red">*</span>
                    @Html.ValidationMessageFor(m => m.UserName)
                </td>
            </tr>
              <tr>
                <th width="10%">
                    <label>
                        Sector Name</label>
                </th>
                <td>
                 @Html.DropDownListFor(model => model.SectorCode, new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { id = "ddlSector" })
                    <span style="color: Red">*</span>
                    @Html.ValidationMessageFor(m => m.SectorCode)
                </td>
            </tr>
            <tr>
                <th width="10%">
                    <label>
                        User Type</label>
                </th>
                <td>
                    @Html.DropDownListFor(model => model.UserType, new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { id = "ddlUserType" })
                    <span style="color: Red">*</span>
                    @Html.ValidationMessageFor(m => m.UserId)
                </td>
            </tr>
            <tr>
                <th>
                    <label>
                        Email Id</label>
                </th>
                <td>
                    @Html.TextBoxFor(m => m.EmailId, new { @Class = "CSSTextBox", @placeholder = "Enter EmailId"  })
                    <span style="color: Red">*</span>
                    @Html.ValidationMessageFor(m => m.EmailId)
                </td>
            </tr>
            <tr>
                <th>
                    <label>
                        Password</label>
                </th>
                <td>
                    @Html.PasswordFor(m => m.Password, new { @Class = "CSSTextBox", @placeholder = "Enter Password" })
                    <span style="color: Red">*</span> @*<span id="strength">Type Password</span>*@
                    @Html.ValidationMessageFor(m => m.Password)
                </td>
            </tr>
            <tr>
                <th>
                    <label>
                        Confirm Password</label>
                </th>
                <td>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @Class = "CSSTextBox", @placeholder = "ReEnter Password"  })
                    <span style="color: Red">*</span>
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </td>
            </tr>
            <tr>
                <td>
                </td>
                <td>
                    <input type="submit" id="btnSubmit" value="Register" />
                    <input type="button" id="btnReset" value="Reset" />
                </td>
            </tr>
        </table>
    </div>
}
<div id="DivUserSearch"></div>
